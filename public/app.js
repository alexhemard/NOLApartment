// Generated by CoffeeScript 1.3.3
(function() {
  var MAX_BEDS, MAX_PRICE, MIN_BEDS, MIN_PRICE, apartment_template, apartments, clearMarkers, findApartments, map, mapApartments, markers, setBeds, setPrices;

  apartments = [];

  markers = [];

  map = null;

  apartment_template = null;

  MIN_PRICE = 0;

  MAX_PRICE = 3000;

  MIN_BEDS = 0;

  MAX_BEDS = 10;

  $(function() {
    var mapOptions;
    setPrices(MIN_PRICE, MAX_PRICE);
    setBeds(MIN_BEDS, MAX_BEDS);
    apartment_template = Handlebars.compile(($('#apartment-template')).html());
    ($('#price-slider')).slider({
      range: true,
      min: MIN_PRICE,
      max: MAX_PRICE,
      step: 50,
      values: [+($('#min-price-input')).val(), +($('#max-price-input')).val()],
      slide: function(event, ui) {
        return setPrices(ui.values[0], ui.values[1]);
      }
    });
    ($('#beds-slider')).slider({
      range: true,
      min: MIN_BEDS,
      max: MAX_BEDS,
      step: 1,
      values: [+($('#min-beds-input')).val(), +($('#max-beds-input')).val()],
      slide: function(event, ui) {
        return setBeds(ui.values[0], ui.values[1]);
      }
    });
    mapOptions = {
      center: new google.maps.LatLng(29.9728, -90.05902),
      zoom: 13,
      mapTypeId: google.maps.MapTypeId.ROADMAP
    };
    map = new google.maps.Map(($('#map_canvas'))[0], mapOptions);
    $.getJSON('/apartments', function(data) {
      var a;
      apartments = (function() {
        var _i, _len, _results;
        _results = [];
        for (_i = 0, _len = data.length; _i < _len; _i++) {
          a = data[_i];
          _results.push(new Apartment(a));
        }
        return _results;
      })();
      return mapApartments(apartments);
    });
    return ($('button#filter')).click(function() {
      var max_beds, max_price, min_beds, min_price;
      min_price = ($('#min-price-input')).val();
      max_price = ($('#max-price-input')).val();
      min_beds = ($('#min-beds-input')).val();
      max_beds = ($('#max-beds-input')).val();
      return mapApartments(findApartments(min_price, max_price, min_beds, max_beds));
    });
  });

  mapApartments = function(apartments) {
    var apartment, infoWindow, marker, _i, _len, _results;
    clearMarkers();
    _results = [];
    for (_i = 0, _len = apartments.length; _i < _len; _i++) {
      apartment = apartments[_i];
      marker = new google.maps.Marker({
        position: new google.maps.LatLng(apartment.latitude, apartment.longitude),
        html: apartment_template(apartment)
      });
      markers.push(marker);
      infoWindow = new google.maps.InfoWindow();
      marker.setMap(map);
      _results.push(google.maps.event.addListener(marker, 'click', function() {
        infoWindow.setContent(this.html);
        return infoWindow.open(map, this);
      }));
    }
    return _results;
  };

  clearMarkers = function() {
    var marker, _i, _len;
    for (_i = 0, _len = markers.length; _i < _len; _i++) {
      marker = markers[_i];
      marker.setMap(null);
    }
    return markers = [];
  };

  findApartments = function(min_price, max_price, min_beds, max_beds) {
    var a, matchingApartment, _i, _len, _results;
    matchingApartment = function(a) {
      var result;
      result = true;
      if (min_price && +min_price > MIN_PRICE) {
        result = result && a.price >= +min_price;
      }
      if (max_price && +max_price < MAX_PRICE) {
        result = result && a.price <= +max_price;
      }
      if (min_beds && +min_beds > MIN_BEDS) {
        result = result && a.beds >= +min_beds;
      }
      if (max_beds && +max_beds < MAX_BEDS) {
        result = result && a.beds <= +max_beds;
      }
      return result;
    };
    _results = [];
    for (_i = 0, _len = apartments.length; _i < _len; _i++) {
      a = apartments[_i];
      if (matchingApartment(a)) {
        _results.push(a);
      }
    }
    return _results;
  };

  setPrices = function(min_price, max_price) {
    ($('#min-price-input')).val(min_price);
    ($('#max-price-input')).val(max_price);
    if (max_price >= MAX_PRICE) {
      max_price += '+';
    }
    return ($('#price-range')).html('$' + min_price + ' - ' + '$' + max_price);
  };

  setBeds = function(min_beds, max_beds) {
    ($('#min-beds-input')).val(min_beds);
    ($('#max-beds-input')).val(max_beds);
    if (max_beds >= MAX_BEDS) {
      max_beds += '+';
    }
    return ($('#beds-range')).html(min_beds + ' - ' + max_beds);
  };

}).call(this);
